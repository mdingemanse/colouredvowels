@mixin background(){
    background: #fefcea; /* Old browsers */
    background: -moz-linear-gradient(-45deg,  #fefcea 0%, #f4f4f4 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#fefcea), color-stop(100%,#f4f4f4)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg,  #fefcea 0%,#f4f4f4 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg,  #fefcea 0%,#f4f4f4 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg,  #fefcea 0%,#f4f4f4 100%); /* IE10+ */
    background: linear-gradient(135deg,  #fefcea 0%,#f4f4f4 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fefcea', endColorstr='#f4f4f4',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}
@mixin background2(){
    background: #eeeeee; /* Old browsers */
    background: -moz-linear-gradient(-45deg,  #eeeeee 0%, #d7e0ea 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#eeeeee), color-stop(100%,#d7e0ea)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg,  #eeeeee 0%,#d7e0ea 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg,  #eeeeee 0%,#d7e0ea 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg,  #eeeeee 0%,#d7e0ea 100%); /* IE10+ */
    background: linear-gradient(135deg,  #eeeeee 0%,#d7e0ea 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#eeeeee', endColorstr='#d7e0ea',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}
@mixin scroll(){
    overflow-scrolling: touch;
    -webkit-overflow-scrolling: touch;
}
$loops: 0;
@function approximateSq($num, $approx) {
    $root: (( $num / $approx ) + $approx) / 2;
    @return $root;
}
@function sqrt($num) {
    $root: 0;
    $testRoot: 0;
    $upperBounds: round($num / 2) + 1;
    //never need over half the main number. Add one just to be sure!
    $loops: $upperBounds;
    @for $test from 2 through $upperBounds {
        $sq: $test * $test;
        @if $sq <= $num {
            $testRoot: $test;
        }
    }
    $root: (approximateSq($num, $testRoot));
    @return $root;
}
@mixin left($width, $line:5px, $color:#333, $hcolor:#000, $round:$line, $correction:1) {
    $q: sqrt((($width/2)*($width/2))+(($width/2)*($width/2)));
    height: $line;
    width: $width;
    height: $width;
    @include rounded($round);
    &:after,
    &:before {
        @include rotation(-45deg);
        position: absolute;
        content: " ";
        width: $q+($line/$correction);
        height: $line;
        background: $color;
        top: sqrt(($q*$q)/2)/2*1px;
        left: $q/4;
        z-index: 1;
        margin-top: -($line/2);
        @include rounded($round);
    }
    &:before {
        top: (sqrt(($q*$q)/2)/2)*3px;
        @include rotation(-135deg);
    }
}
@mixin right($width, $line:5px, $color:#333, $hcolor:#000, $round:$line, $correction:1) {
    $q: sqrt((($width/2)*($width/2))+(($width/2)*($width/2))); height: $line;
    width: $width;
    height: $width;
    @include rounded($round);
    &:after,
    &:before {
        @include rotation(45deg);
        position: absolute;
        content: " ";
        width: $q+($line/$correction);
        height: $line;
        background: $color;
        top: (sqrt(($q*$q)/2)/2)*1px;
        right: $q/4;
        z-index: 1;
        margin-top: -($line/2);
        @include rounded($round);
    }
    &:before {
        top: (sqrt(($q*$q)/2)/2)*3px;
        @include rotation(135deg);
    }
}
@mixin link() {
    background: transparent;
    border: 0;
    font-weight: 400;
    text-decoration: none;
    color: #333;
    position: relative;
    z-index: 9;
    overflow: visible;
    padding-bottom: 0.1em;
    @include padding();
    @include transition(.2s);
    &:before,
    &:after {
        border-bottom: 0.17em solid #333;
        position: absolute;
        display: block;
        content: " ";
        width: 100%;
        height: 0;
        left: 0;
        margin-left: 0;
        bottom: -0.17em;
        @include transition(.2s);
    }
    &:after {
        width: 0;
        border-bottom: 0.17em solid $support1;
    }
    &:hover {
        color: $support1;
        &:after {
            width: 100%;
        }
    }
}
@mixin rotate($time) {
    -webkit-animation: spinner $time linear infinite;
    -moz-animation: spinner $time linear infinite;
    -ms-animation: spinner $time linear infinite;
    -o-animation: spinner $time linear infinite;
    animation: spinner $time linear infinite;
}
@mixin cross($w, $color:#333, $w2:20px) {
    @include rotation(45deg);
    &:before,
    &:after {
        content: "";
        position: absolute;
        z-index: 1;
        background: $color;
        @include rounded(5px);
        // .transition(0.05s);
    }
    &:before {
        width: 100%;
        top: 50%;
        left: 0;
        height: $w;
        margin-top: -$w/2;
    }
    &:after {
        height: 100%;
        left: 50%;
        top: 0;
        width: $w;
        margin-left: -$w/2;
    }
}
@mixin menu($width, $line:5px, $color:#333, $hcolor:#000, $round:$line) {
    position: absolute;
    display: block;
    background: $color;
    height: $line;
    width: $width;
    margin-top: $width/9;
    @include rounded($round);
    top: 50%;
    left: 50%;
    margin-top: floor(-$width/2);
    margin-left: floor(-$width/2);
    &:after,
    &:before {
        position: absolute;
        content: "";
        width: 100%;
        height: $line;
        background: $color;
        bottom: floor(-$width/3*1);
        left: 0;
        z-index: 1;
        @include rounded($round);
    }
    &:before {
        bottom: floor(-($width/3)*2);
    }
}
@mixin padding() {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
@mixin box-sizing($value) {
    -webkit-box-sizing: $value;
    -moz-box-sizing: $value;
    box-sizing: $value;
}
@mixin select() {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
@mixin gr($color: #F5F5F5, $start: #EEE, $stop: #FFF, $percent:0) {
    background: $color;
    background: -webkit-gradient(linear, left bottom, left top, color-stop($percent, $start), color-stop(1, $stop));
    background: -ms-linear-gradient(bottom, $start, $stop);
    background: -moz-linear-gradient(center bottom, $start $percent*100%, $stop 100%);
    background: -o-linear-gradient($stop, $start);
}
@mixin rounded($r: 5px) {
    -webkit-border-radius: $r;
    -moz-border-radius: $r;
    border-radius: $r;
}
@mixin shadow($x:0, $y:0, $b:3px, $c:rgba(0, 0, 0, 0.3)) {
    -webkit-box-shadow: $x $y $b $c;
    -moz-box-shadow: $x $y $b $c;
    box-shadow: $x $y $b $c;
}
@mixin shadow2($params...) {
    -webkit-box-shadow: $params;
    -moz-box-shadow: $params;
    box-shadow: $params;
}
@mixin transform($arguments) {
    -webkit-transform: $arguments;
    -moz-transform: $arguments;
    -o-transform: $arguments;
    -ms-transform: $arguments;
    transform: $arguments;
}
@mixin rotation($deg:5deg) {
    @include transform(rotate($deg));
}
@mixin transition($duration:0.2s, $ease:ease-out) {
    -webkit-transition: all $duration $ease;
    -moz-transition: all $duration $ease;
    -o-transition: all $duration $ease;
    transition: all $duration $ease;
}
@mixin spinner($border:5px, $width:15px, $speed:1s) {
    border: $border solid #333;
    border-right-color: rgba(0,0,0,0.75);
    border-bottom-color: rgba(0,0,0,0.5);
    border-left-color: rgba(0,0,0,0.25);
    width: $width;
    height: $width;
    @include rounded($width*2);
    @include padding();
    padding: 0;
    margin: 0;
    -webkit-animation: spinner $speed linear infinite;
    -moz-animation: spinner $speed linear infinite;
    -ms-animation: spinner $speed linear infinite;
    -o-animation: spinner $speed linear infinite;
    animation: spinner $speed linear infinite;
}
@mixin blur($w) {
    -webkit-filter: blur($w);
    -moz-filter: blur($w);
    -o-filter: blur($w);
    -ms-filter: blur($w);
    filter:blur($w);
}
@-webkit-keyframes spinner {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}
@-moz-keyframes spinner {
    0% {
        -moz-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -moz-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}
@-o-keyframes spinner {
    0% {
        -o-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}
@-ms-keyframes spinner {
    0% {
        -ms-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -ms-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}
@keyframes spinner {
    0% {
        transform: rotate(0deg);
        transform: rotate(0deg);
    }
}
